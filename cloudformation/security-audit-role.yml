AWSTemplateFormatVersion: '2010-09-09'
Description: >
  'Creates a role that authorizes cross-account access from one aws account to a security audit role in another account.
  Grants access to the ViewOnlyAccess and SecurityAudit managed job functions in the target account. Deploy only in a single region.
  Last updated at 2024-01-27 11:27:50 by phillips.james@gmail.com'
Metadata:
  Version: 1.0
Parameters:
  Contact:
    Type: String
    Description: "contact resources for questions about this stack"
    Default: "James Phillips phillips.james@gmail.com"
  Owner:
    Type: String
    Description: "email address of owner of this stack"
  OrgPrefix:
    Type: String
    Description: "Organizational prefix for resources"
    Default: "opspath"
    AllowedPattern: "[a-z]*"
  PrincipalAccountId:
    Type: String
    Description: 12 digit id of the account containing the users to which you're granting access
    AllowedPattern: "\\d{12}"
Resources:
  AssumeRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonInspector2ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSSecurityHubReadOnlyAccess
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      RoleName: !Join [ "-", [ !Ref OrgPrefix, "CrossAccountSecurityAuditRole"] ]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: "*" # this is done to allow the use of SSO in the PrincipalAccountId. 
            # By using the wildcard and the Condition key, you are trusting the PrincipalAccount to manage the user,
            # just the same as if you used AWS: !Sub 'arn:aws:iam::${PrincipalAccountId}:root' for an iam user.
          Action:
          - sts:AssumeRole
          Condition:
            StringEquals:
              aws:PrincipalAccount: !Ref PrincipalAccountId
      Tags:
        - Key: Owner
          Value: !Ref Owner
        - Key: Contact
          Value: !Ref Contact
Outputs:
  RootAdminRoleArn:
    Description: "CrossAccountSupportRole role Arn"
    Value: !GetAtt AssumeRole.Arn
  
